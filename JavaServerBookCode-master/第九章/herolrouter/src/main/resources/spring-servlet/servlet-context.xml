<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="com.hjc.herolrouter" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- task annotations -->
	<!-- 开启这个配置，spring才能识别@Scheduled注解 -->

	<task:executor id="executor" pool-size="10" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:annotation-driven executor="executor"
		scheduler="scheduler" />

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="index" />

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g. 
			/?locale=de -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<!-- <bean class="com.hjczb.warouter.minsheng.util.context.ContextInterceptor" 
			/> -->
	</mvc:interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/page/**" location="/page/" />
	<mvc:resources mapping="/uploadify/**" location="/uploadify/" />
	<!-- Saves a locale change using a cookie -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />

	<!-- Application Message Bundle -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- <bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> 
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/" /> <property 
		name="freemarkerSettings"> <props> <prop key="template_update_delay">0</prop> 
		<prop key="defaultEncoding">UTF-8</prop> <prop key="url_escaping_charset">UTF-8</prop> 
		</props> </property> <property name="freemarkerVariables"> <map> <entry key="xml_escape" 
		value-ref="fmXmlEscape" /> </map> </property> </bean> <bean id="fmXmlEscape" 
		class="freemarker.template.utility.XmlEscape" /> <bean id="viewResolver" 
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> 
		<property name="order" value="0" /> <property name="prefix" value="" /> <property 
		name="suffix" value=".ftl" /> <property name="contentType" value="text/html;charset=utf-8" 
		/> <property name="exposeSpringMacroHelpers" value="true" /> <property name="exposeRequestAttributes" 
		value="true" /> <property name="exposeSessionAttributes" value="true" /> 
		<property name="requestContextAttribute" value="request" /> </bean> -->

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>apolication/json; charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 配置文件上传功能 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 1024 *1024 *10 -->
		<property name="maxUploadSize" value="10485760" />
	</bean>


	<!-- 异常处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">common/upload_error</prop>
				<prop key="java.lang.Exception">common/err</prop>
				<prop key="java.lang.Throwable">common/err</prop>

			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="common/err">500</prop>
				<prop key="common/404">404</prop>
			</props>
		</property>
		<!--设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="common/err"></property>
		<!--默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>

	<context:annotation-config />

</beans>